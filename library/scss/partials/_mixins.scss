/******************************************************************
Site Name:
Author:

Stylesheet: Mixins Stylesheet

This is where you can take advantage of Sass' great features: Mixins.
I won't go in-depth on how they work exactly,
there are a few articles below that will help do that. What I will
tell you is that this will help speed up simple changes like
changing a color or adding CSS3 techniques gradients.

A WORD OF WARNING: It's very easy to overdo it here. Be careful and
remember less is more.

Helpful:
http://sachagreif.com/useful-sass-mixins/
http://thesassway.com/intermediate/leveraging-sass-mixins-for-cleaner-code
http://web-design-weekly.com/blog/2013/05/12/handy-sass-mixins/

******************************************************************/


/*********************
TRANSITION
*********************/

/*
I totally rewrote this to be cleaner and easier to use.
You'll need to be using Sass 3.2+ for these to work.
Thanks to @anthonyshort for the inspiration on these.
USAGE: @include transition(all 0.2s ease-in-out);
*/

@mixin transition($transition...) {
  // defining prefixes so we can use them in mixins below
  $prefixes:      ("-webkit-", "" );
  @each $prefix in $prefixes {
    #{$prefix}transition: $transition;
  }
}

/*********************
CSS3 GRADIENTS
Be careful with these since they can
really slow down your CSS. Don't overdo it.
*********************/

/* @include css-gradient(#dfdfdf,#f8f8f8); */
@mixin css-gradient($from: #dfdfdf, $to: #f8f8f8) {
	background-color: $to;
	background-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
	background-image: -webkit-linear-gradient(top, $from, $to);
	background-image: -moz-linear-gradient(top, $from, $to);
	background-image: -o-linear-gradient(top, $from, $to);
	background-image: linear-gradient(to bottom, $from, $to);
}

$secondary-two_stops: $secondary-400, $secondary-500; 
$secondary-two_stops_reverse: $secondary-500, $secondary-400; 

$primary-two_stops__light: $primary-200, $primary-400;
$primary-two_stops__dark: $primary-500, $primary-700;
$primary-two_stops__dark_reverse: $primary-700, $primary-500;

//$list2: $blue 0%,$blue 33%,$green 33%,$green 66%, $orange 66%, $orange 100%; 

//$list3: $blue 0%,$blue 10%,$green 25%,$green 39%,$orange 79%,$orange 100%; 

//$list4: $blue, $green, $orange, $blue, $green, $orange, $blue, $green, $orange; 

@mixin gradient($angle, $args...) { 
	background: -webkit-linear-gradient($angle, $args);
	background: -moz-linear-gradient($angle, $args);
	background: -o-linear-gradient($angle, $args);
	background: linear-gradient($angle, $args);  
  }

@mixin gold_overlay_gradient() {
	background: url("../images/pattern_circle.png") repeat left top, linear-gradient($secondary-300, $secondary-500);
}

@mixin gold_overlay_gradient_light() {
	background: url("../images/pattern_circle.png") repeat left top, linear-gradient($secondary-300, $secondary-400);
}

@mixin pattern_overlay() {
	background: linear-gradient(rgba($grey-10, .8), rgba($grey-10, .5)), url("../images/pattern_circle.png") repeat left top;
}


/*********************
BOX SIZING
*********************/

/* @include box-sizing(border-box); */
/* NOTE: value of "padding-box" is only supported in Gecko. So
probably best not to use it. I mean, were you going to anyway? */
@mixin box-sizing($type: border-box) {
	-webkit-box-sizing: $type;
	-moz-box-sizing:    $type;
	-ms-box-sizing:     $type;
	box-sizing:         $type;
}


/* Set 3 variables w/ different styles */
$bottom-diffused: 0px 13px 21px -10px rgba(0, 0, 0, 0.3);
$left-diffused: -13px 0px 21px -10px rgba(0, 0, 0, 0.3);
$right-diffused: 13px 0px 21px -10px rgba(0, 0, 0, 0.3);

/* Create our super simple mixin */
@mixin box-shadow($shadow) {
    box-shadow: $shadow;
}

/* Putting it all together in our classes 
.bottom-box {
    @include box-shadow($bottom-diffused);
}

.left-box {
    @include box-shadow($left-diffused);
}

.right-box {
    @include box-shadow($right-diffused);
}
*/